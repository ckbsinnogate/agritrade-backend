# Generated by Django 5.1.6 on 2025-07-04 03:09

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ShippingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('base_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost_per_kg', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('estimated_days_min', models.PositiveIntegerField()),
                ('estimated_days_max', models.PositiveIntegerField()),
                ('available_countries', models.JSONField(blank=True, default=list)),
                ('available_regions', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'shipping_methods',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('order_type', models.CharField(choices=[('regular', 'Regular Order'), ('bulk', 'Bulk Order'), ('subscription', 'Subscription Order'), ('processing', 'Processing Order'), ('contract', 'Contract Farming Order')], default='regular', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('paid', 'Paid'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Payment Pending'), ('paid', 'Paid'), ('escrow', 'In Escrow'), ('released', 'Payment Released'), ('refunded', 'Refunded'), ('disputed', 'Under Dispute')], default='pending', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(default='GHS', max_length=10)),
                ('delivery_address', models.TextField()),
                ('delivery_city', models.CharField(max_length=100)),
                ('delivery_region', models.CharField(max_length=100)),
                ('delivery_country', models.CharField(default='Ghana', max_length=100)),
                ('delivery_phone', models.CharField(max_length=20)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('buyer_notes', models.TextField(blank=True)),
                ('seller_notes', models.TextField(blank=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('tracking_number', models.CharField(blank=True, max_length=100)),
                ('logistics_partner', models.CharField(blank=True, max_length=200)),
                ('contract_details', models.JSONField(blank=True, default=dict)),
                ('delivery_schedule', models.JSONField(blank=True, default=list)),
                ('quality_requirements', models.JSONField(blank=True, default=dict)),
                ('quality_inspection_passed', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('product_name', models.CharField(max_length=200)),
                ('product_description', models.TextField(blank=True)),
                ('unit', models.CharField(max_length=20)),
                ('quality_specifications', models.JSONField(blank=True, default=dict)),
                ('processing_requirements', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('product_variation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.productvariation')),
            ],
            options={
                'db_table': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_method', models.CharField(choices=[('mobile_money', 'Mobile Money'), ('bank_transfer', 'Bank Transfer'), ('card', 'Credit/Debit Card'), ('crypto', 'Cryptocurrency'), ('cash', 'Cash'), ('escrow', 'Escrow')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(default='GHS', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('payment_gateway', models.CharField(blank=True, max_length=50)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='orders.order')),
            ],
            options={
                'db_table': 'order_payments',
                'ordering': ['-initiated_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('paid', 'Paid'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='orders.order')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'order_status_history',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processing_type', models.CharField(max_length=100)),
                ('processing_facility', models.CharField(max_length=200)),
                ('raw_materials_received', models.BooleanField(default=False)),
                ('raw_materials_quality_score', models.PositiveIntegerField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('materials_received', 'Raw Materials Received'), ('processing', 'In Processing'), ('quality_check', 'Quality Check'), ('packaging', 'Packaging'), ('ready', 'Ready for Delivery'), ('completed', 'Completed'), ('rejected', 'Quality Rejected')], default='pending', max_length=20)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('quality_check_passed', models.BooleanField(blank=True, null=True)),
                ('quality_notes', models.TextField(blank=True)),
                ('expected_yield', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('actual_yield', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('waste_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='processing_order', to='orders.order')),
                ('processor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'processing_orders',
            },
        ),
        migrations.CreateModel(
            name='OrderShipping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(blank=True, max_length=100)),
                ('carrier', models.CharField(blank=True, max_length=100)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_delivery', models.DateTimeField(blank=True, null=True)),
                ('actual_delivery', models.DateTimeField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dimensions', models.JSONField(blank=True, default=dict)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping', to='orders.order')),
                ('shipping_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.shippingmethod')),
            ],
            options={
                'db_table': 'order_shipping',
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['buyer', 'status'], name='orders_buyer_i_de73e4_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['seller', 'status'], name='orders_seller__0c477d_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_number'], name='orders_order_n_1336be_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_date'], name='orders_order_d_6e39a9_idx'),
        ),
    ]
