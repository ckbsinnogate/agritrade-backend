# Generated by Django 5.1.6 on 2025-07-04 23:32

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvertisementPlacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('location', models.CharField(choices=[('homepage_banner', 'Homepage Banner'), ('search_results', 'Search Results'), ('product_detail', 'Product Detail Page'), ('category_page', 'Category Page'), ('mobile_app', 'Mobile App'), ('farmer_dashboard', 'Farmer Dashboard'), ('marketplace', 'Marketplace'), ('sidebar', 'Sidebar')], max_length=50)),
                ('dimensions', models.CharField(blank=True, help_text='e.g., 728x90, 300x250', max_length=20)),
                ('max_file_size_mb', models.PositiveIntegerField(default=5)),
                ('price_per_impression', models.DecimalField(decimal_places=4, default=Decimal('0.0010'), help_text='Cost per thousand impressions (CPM)', max_digits=8)),
                ('price_per_click', models.DecimalField(decimal_places=4, default=Decimal('0.0500'), help_text='Cost per click (CPC)', max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['location', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AdvertisementCampaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('campaign_type', models.CharField(choices=[('seasonal', 'Seasonal Campaign'), ('product_launch', 'Product Launch'), ('brand_awareness', 'Brand Awareness'), ('farmer_education', 'Farmer Education'), ('market_expansion', 'Market Expansion')], max_length=20)),
                ('total_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('target_impressions', models.PositiveIntegerField(blank=True, null=True)),
                ('target_clicks', models.PositiveIntegerField(blank=True, null=True)),
                ('target_conversions', models.PositiveIntegerField(blank=True, null=True)),
                ('target_ctr', models.DecimalField(blank=True, decimal_places=2, help_text='Target CTR %', max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('ad_type', models.CharField(choices=[('product_promotion', 'Product Promotion'), ('farmer_spotlight', 'Farmer Spotlight'), ('seasonal_campaign', 'Seasonal Campaign'), ('brand_awareness', 'Brand Awareness'), ('value_addition', 'Value Addition Services'), ('equipment_rental', 'Equipment Rental'), ('training_program', 'Training Program'), ('market_price_alert', 'Market Price Alert')], max_length=20)),
                ('target_audience', models.JSONField(default=dict, help_text='Age, interests, behavior targeting')),
                ('geographic_targeting', models.JSONField(default=dict, help_text='Countries, regions, cities')),
                ('demographic_targeting', models.JSONField(default=dict, help_text='Gender, occupation, income')),
                ('product_categories', models.JSONField(default=list, help_text='Relevant product categories')),
                ('banner_image_url', models.URLField(blank=True, max_length=500)),
                ('banner_mobile_url', models.URLField(blank=True, max_length=500)),
                ('video_url', models.URLField(blank=True, max_length=500)),
                ('landing_page_url', models.URLField(blank=True, max_length=500)),
                ('call_to_action', models.CharField(default='Learn More', max_length=50)),
                ('budget', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('10.00'))])),
                ('daily_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bid_amount', models.DecimalField(decimal_places=4, default=Decimal('0.0500'), max_digits=10)),
                ('pricing_model', models.CharField(choices=[('cpm', 'Cost Per Mille (Impressions)'), ('cpc', 'Cost Per Click'), ('cpa', 'Cost Per Action'), ('flat_rate', 'Flat Rate')], default='cpc', max_length=20)),
                ('currency', models.CharField(default='GHS', max_length=3)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='draft', max_length=20)),
                ('approval_notes', models.TextField(blank=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('impressions', models.PositiveIntegerField(default=0)),
                ('clicks', models.PositiveIntegerField(default=0)),
                ('conversions', models.PositiveIntegerField(default=0)),
                ('amount_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('advertiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advertisements', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_ads', to=settings.AUTH_USER_MODEL)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='advertisements', to='advertisements.advertisementcampaign')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdvertisementPlacementAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveIntegerField(default=1, help_text='Display priority (1=highest)')),
                ('max_impressions', models.PositiveIntegerField(blank=True, null=True)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('advertisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advertisements.advertisement')),
                ('placement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advertisements.advertisementplacement')),
            ],
            options={
                'ordering': ['priority'],
                'unique_together': {('advertisement', 'placement')},
            },
        ),
        migrations.AddField(
            model_name='advertisement',
            name='placements',
            field=models.ManyToManyField(through='advertisements.AdvertisementPlacementAssignment', to='advertisements.advertisementplacement'),
        ),
        migrations.CreateModel(
            name='AdvertisementAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('impressions', models.PositiveIntegerField(default=0)),
                ('clicks', models.PositiveIntegerField(default=0)),
                ('conversions', models.PositiveIntegerField(default=0)),
                ('amount_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('ctr', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('cpc', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('cpa', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('audience_demographics', models.JSONField(default=dict)),
                ('geographic_performance', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('advertisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_analytics', to='advertisements.advertisement')),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['advertisement', 'date'], name='advertiseme_adverti_4019fb_idx'), models.Index(fields=['date'], name='advertiseme_date_3af933_idx')],
                'unique_together': {('advertisement', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AdvertisementPerformanceLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('impression', 'Impression'), ('click', 'Click'), ('conversion', 'Conversion'), ('view', 'View'), ('engagement', 'Engagement')], max_length=20)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True, max_length=500)),
                ('cost', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('metadata', models.JSONField(default=dict, help_text='Additional event data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('advertisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_logs', to='advertisements.advertisement')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('placement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advertisements.advertisementplacement')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['advertisement', 'event_type', 'created_at'], name='advertiseme_adverti_0046bd_idx'), models.Index(fields=['placement', 'event_type'], name='advertiseme_placeme_daab26_idx'), models.Index(fields=['created_at'], name='advertiseme_created_6c7cb9_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='advertisement',
            index=models.Index(fields=['advertiser', 'status'], name='advertiseme_adverti_7bb2d2_idx'),
        ),
        migrations.AddIndex(
            model_name='advertisement',
            index=models.Index(fields=['start_date', 'end_date'], name='advertiseme_start_d_680dfa_idx'),
        ),
        migrations.AddIndex(
            model_name='advertisement',
            index=models.Index(fields=['ad_type', 'status'], name='advertiseme_ad_type_7a36a7_idx'),
        ),
    ]
