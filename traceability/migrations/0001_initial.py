# Generated by Django 5.1.6 on 2025-07-04 21:18

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockchainNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('network_id', models.IntegerField()),
                ('rpc_url', models.URLField()),
                ('explorer_url', models.URLField(blank=True)),
                ('native_currency', models.CharField(default='ETH', max_length=10)),
                ('is_testnet', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'traceability_blockchain_network',
            },
        ),
        migrations.CreateModel(
            name='BlockchainTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_hash', models.CharField(max_length=66, unique=True)),
                ('function_name', models.CharField(max_length=100)),
                ('parameters', models.JSONField(default=dict)),
                ('from_address', models.CharField(max_length=42)),
                ('to_address', models.CharField(max_length=42)),
                ('gas_limit', models.BigIntegerField()),
                ('gas_used', models.BigIntegerField(blank=True, null=True)),
                ('gas_price', models.BigIntegerField()),
                ('value', models.CharField(default='0', max_length=78)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('failed', 'Failed'), ('reverted', 'Reverted')], default='pending', max_length=20)),
                ('block_number', models.BigIntegerField(blank=True, null=True)),
                ('block_hash', models.CharField(blank=True, max_length=66)),
                ('confirmation_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'traceability_blockchain_transaction',
            },
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=300)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('farm_size_hectares', models.DecimalField(decimal_places=2, max_digits=10)),
                ('organic_certified', models.BooleanField(default=False)),
                ('certification_body', models.CharField(blank=True, max_length=200)),
                ('registration_number', models.CharField(max_length=100, unique=True)),
                ('blockchain_address', models.CharField(blank=True, max_length=42)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'traceability_farm',
            },
        ),
        migrations.CreateModel(
            name='FarmCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certification_type', models.CharField(choices=[('organic', 'Organic Certification'), ('fair_trade', 'Fair Trade Certification'), ('rainforest', 'Rainforest Alliance'), ('global_gap', 'GlobalGAP'), ('iso_22000', 'ISO 22000 Food Safety'), ('haccp', 'HACCP Certification')], max_length=50)),
                ('certificate_number', models.CharField(max_length=100)),
                ('issuing_authority', models.CharField(max_length=200)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('certificate_file_hash', models.CharField(blank=True, max_length=64)),
                ('blockchain_hash', models.CharField(blank=True, max_length=66)),
                ('blockchain_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='traceability.farm')),
                ('verification_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='traceability.blockchaintransaction')),
            ],
            options={
                'db_table': 'traceability_farm_certification',
            },
        ),
        migrations.CreateModel(
            name='ProductTrace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blockchain_id', models.CharField(max_length=66, unique=True)),
                ('harvest_date', models.DateTimeField()),
                ('harvest_location', models.CharField(max_length=300)),
                ('batch_number', models.CharField(max_length=100)),
                ('quantity_harvested', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quality_grade', models.CharField(default='good', max_length=20)),
                ('qr_code_data', models.TextField()),
                ('qr_code_image', models.TextField(blank=True)),
                ('ipfs_hash', models.CharField(blank=True, max_length=64)),
                ('consumer_view_count', models.IntegerField(default=0)),
                ('last_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traceability.farm')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trace', to='products.product')),
            ],
            options={
                'db_table': 'traceability_product_trace',
            },
        ),
        migrations.CreateModel(
            name='ConsumerScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('consumer_id', models.CharField(blank=True, max_length=100)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('location', models.CharField(blank=True, max_length=300)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('app_version', models.CharField(blank=True, max_length=20)),
                ('scan_duration', models.IntegerField(default=0)),
                ('feedback_rating', models.IntegerField(blank=True, null=True)),
                ('feedback_comment', models.TextField(blank=True)),
                ('scanned_at', models.DateTimeField(auto_now_add=True)),
                ('product_trace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='traceability.producttrace')),
            ],
            options={
                'db_table': 'traceability_consumer_scan',
            },
        ),
        migrations.CreateModel(
            name='SmartContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contract_address', models.CharField(max_length=42, unique=True)),
                ('abi', models.JSONField()),
                ('bytecode', models.TextField(blank=True)),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('is_deployed', models.BooleanField(default=False)),
                ('deployment_transaction', models.CharField(blank=True, max_length=66)),
                ('deployed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traceability.blockchainnetwork')),
            ],
            options={
                'db_table': 'traceability_smart_contract',
            },
        ),
        migrations.AddField(
            model_name='blockchaintransaction',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traceability.smartcontract'),
        ),
        migrations.CreateModel(
            name='SupplyChainEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('event_type', models.CharField(choices=[('harvest', 'Harvest'), ('process', 'Processing'), ('package', 'Packaging'), ('store', 'Storage'), ('transport', 'Transportation'), ('inspect', 'Quality Inspection'), ('certify', 'Certification'), ('deliver', 'Delivery'), ('purchase', 'Consumer Purchase')], max_length=50)),
                ('location', models.CharField(max_length=300)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('timestamp', models.DateTimeField()),
                ('description', models.TextField()),
                ('metadata', models.JSONField(default=dict)),
                ('blockchain_hash', models.CharField(blank=True, max_length=66)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('verified', 'Blockchain Verified')], default='initiated', max_length=20)),
                ('verification_required', models.BooleanField(default=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('blockchain_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='traceability.blockchaintransaction')),
                ('product_trace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='traceability.producttrace')),
            ],
            options={
                'db_table': 'traceability_supply_chain_event',
                'ordering': ['timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='farm',
            index=models.Index(fields=['farmer'], name='traceabilit_farmer__099d2b_idx'),
        ),
        migrations.AddIndex(
            model_name='farm',
            index=models.Index(fields=['registration_number'], name='traceabilit_registr_ce05f5_idx'),
        ),
        migrations.AddIndex(
            model_name='farm',
            index=models.Index(fields=['organic_certified'], name='traceabilit_organic_e203a1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='farmcertification',
            unique_together={('farm', 'certification_type', 'certificate_number')},
        ),
        migrations.AddIndex(
            model_name='producttrace',
            index=models.Index(fields=['blockchain_id'], name='traceabilit_blockch_6b2299_idx'),
        ),
        migrations.AddIndex(
            model_name='producttrace',
            index=models.Index(fields=['batch_number'], name='traceabilit_batch_n_e3cd3b_idx'),
        ),
        migrations.AddIndex(
            model_name='producttrace',
            index=models.Index(fields=['harvest_date'], name='traceabilit_harvest_34df0e_idx'),
        ),
        migrations.AddIndex(
            model_name='consumerscan',
            index=models.Index(fields=['product_trace'], name='traceabilit_product_cfd0dd_idx'),
        ),
        migrations.AddIndex(
            model_name='consumerscan',
            index=models.Index(fields=['scanned_at'], name='traceabilit_scanned_58d708_idx'),
        ),
        migrations.AddIndex(
            model_name='consumerscan',
            index=models.Index(fields=['consumer_id'], name='traceabilit_consume_16b3c4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='smartcontract',
            unique_together={('name', 'network')},
        ),
        migrations.AddIndex(
            model_name='blockchaintransaction',
            index=models.Index(fields=['transaction_hash'], name='traceabilit_transac_d1a1b6_idx'),
        ),
        migrations.AddIndex(
            model_name='blockchaintransaction',
            index=models.Index(fields=['status'], name='traceabilit_status_600a0c_idx'),
        ),
        migrations.AddIndex(
            model_name='blockchaintransaction',
            index=models.Index(fields=['created_at'], name='traceabilit_created_7ab372_idx'),
        ),
        migrations.AddIndex(
            model_name='supplychainevent',
            index=models.Index(fields=['product_trace', 'timestamp'], name='traceabilit_product_5a9a68_idx'),
        ),
        migrations.AddIndex(
            model_name='supplychainevent',
            index=models.Index(fields=['event_type'], name='traceabilit_event_t_6bb9fc_idx'),
        ),
        migrations.AddIndex(
            model_name='supplychainevent',
            index=models.Index(fields=['status'], name='traceabilit_status_d2c911_idx'),
        ),
    ]
