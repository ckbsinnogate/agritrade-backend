# Generated by Django 5.1.6 on 2025-07-04 03:09

import authentication.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('FARMER', 'Farmer'), ('PROCESSOR', 'Processor'), ('CONSUMER', 'Consumer'), ('INSTITUTION', 'Institution'), ('WAREHOUSE_MANAGER', 'Warehouse Manager'), ('QUALITY_INSPECTOR', 'Quality Inspector'), ('LOGISTICS_PARTNER', 'Logistics Partner'), ('ADMIN', 'Administrator')], max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('permissions', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='Auto-generated unique identifier', max_length=150, unique=True)),
                ('email', models.EmailField(blank=True, help_text='Email address for international users and processors', max_length=254, null=True, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, help_text='Phone number in international format (+233xxxxxxxxx)', max_length=20, null=True, unique=True, validators=[authentication.models.validate_international_phone])),
                ('is_verified', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS')], default='sms', max_length=10)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('country', models.CharField(default='Ghana', max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('address', models.TextField(blank=True)),
                ('language', models.CharField(choices=[('en', 'English'), ('fr', 'French'), ('tw', 'Twi'), ('ee', 'Ewe'), ('ha', 'Hausa'), ('yo', 'Yoruba'), ('sw', 'Swahili')], default='en', max_length=10)),
                ('business_name', models.CharField(blank=True, max_length=200)),
                ('business_registration_number', models.CharField(blank=True, max_length=100)),
                ('tax_identification_number', models.CharField(blank=True, max_length=100)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts', models.PositiveIntegerField(default=0)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('roles', models.ManyToManyField(related_name='users', to='authentication.userrole')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farming_experience_years', models.PositiveIntegerField(blank=True, null=True)),
                ('farm_size_hectares', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('primary_crops', models.JSONField(blank=True, default=list)),
                ('processing_capabilities', models.JSONField(blank=True, default=list)),
                ('id_document_verified', models.BooleanField(default=False)),
                ('business_license_verified', models.BooleanField(default=False)),
                ('farm_verified', models.BooleanField(default=False)),
                ('subscription_plan', models.CharField(default='free', max_length=50)),
                ('notification_preferences', models.JSONField(blank=True, default=dict)),
                ('total_transactions', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='OTPCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('code', models.CharField(max_length=10)),
                ('purpose', models.CharField(choices=[('registration', 'Registration'), ('login', 'Login'), ('password_reset', 'Password Reset'), ('phone_verification', 'Phone Verification'), ('email_verification', 'Email Verification'), ('transaction', 'Transaction')], max_length=30)),
                ('expires_at', models.DateTimeField()),
                ('attempts_count', models.PositiveIntegerField(default=0)),
                ('max_attempts', models.PositiveIntegerField(default=3)),
                ('is_used', models.BooleanField(default=False)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'otp_codes',
                'indexes': [models.Index(fields=['phone_number', 'purpose', 'expires_at'], name='otp_codes_phone_n_b78698_idx'), models.Index(fields=['email', 'purpose', 'expires_at'], name='otp_codes_email_7c08d2_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(condition=models.Q(('email__isnull', False), ('phone_number__isnull', False), _connector='OR'), name='user_must_have_email_or_phone'),
        ),
    ]
