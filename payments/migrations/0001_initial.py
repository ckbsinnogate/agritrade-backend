# Generated by Django 5.1.6 on 2025-07-04 06:42

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('paystack', 'Paystack'), ('flutterwave', 'Flutterwave'), ('mtn_momo', 'MTN Mobile Money'), ('vodafone_cash', 'Vodafone Cash'), ('airteltigo_money', 'AirtelTigo Money'), ('bank_transfer', 'Bank Transfer'), ('stripe', 'Stripe')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('api_base_url', models.URLField()),
                ('public_key', models.CharField(blank=True, max_length=200)),
                ('secret_key', models.CharField(blank=True, max_length=200)),
                ('webhook_secret', models.CharField(blank=True, max_length=200)),
                ('supported_currencies', models.JSONField(default=list)),
                ('supported_countries', models.JSONField(default=list)),
                ('supported_payment_methods', models.JSONField(default=list)),
                ('transaction_fee_percentage', models.DecimalField(decimal_places=4, default=0, max_digits=5)),
                ('fixed_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('minimum_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maximum_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payment_gateways',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EscrowAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='GHS', max_length=10)),
                ('released_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('auto_release_days', models.PositiveIntegerField(default=7)),
                ('requires_quality_confirmation', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('created', 'Created'), ('funded', 'Funded'), ('partial_release', 'Partial Release'), ('released', 'Released'), ('refunded', 'Refunded'), ('disputed', 'Disputed'), ('resolved', 'Resolved')], default='created', max_length=20)),
                ('funded_at', models.DateTimeField(blank=True, null=True)),
                ('released_at', models.DateTimeField(blank=True, null=True)),
                ('auto_release_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_escrows', to=settings.AUTH_USER_MODEL)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='escrow', to='orders.order')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_escrows', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'escrow_accounts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_type', models.CharField(choices=[('mobile_money', 'Mobile Money'), ('bank_transfer', 'Bank Transfer'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('crypto', 'Cryptocurrency'), ('cash', 'Cash on Delivery'), ('bank_account', 'Bank Account')], max_length=20)),
                ('account_details', models.JSONField(default=dict)),
                ('display_name', models.CharField(max_length=100)),
                ('is_default', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentgateway')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payment_methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='GHS', max_length=10)),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1, max_digits=10)),
                ('gateway_reference', models.CharField(max_length=200, unique=True)),
                ('external_reference', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('disputed', 'Disputed')], default='pending', max_length=20)),
                ('transaction_type', models.CharField(choices=[('payment', 'Payment'), ('refund', 'Refund'), ('transfer', 'Transfer'), ('escrow_fund', 'Escrow Funding'), ('escrow_release', 'Escrow Release')], default='payment', max_length=20)),
                ('gateway_request', models.JSONField(blank=True, default=dict)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentgateway')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='orders.order')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='payments.paymentmethod')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=100)),
                ('webhook_id', models.CharField(blank=True, max_length=200)),
                ('payload', models.JSONField(default=dict)),
                ('signature', models.CharField(blank=True, max_length=500)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentgateway')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.transaction')),
            ],
            options={
                'db_table': 'payment_webhooks',
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='DisputeCase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dispute_type', models.CharField(choices=[('payment_failed', 'Payment Failed'), ('product_quality', 'Product Quality Issue'), ('delivery_issue', 'Delivery Problem'), ('wrong_product', 'Wrong Product Received'), ('fraud', 'Fraudulent Activity'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('evidence', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('open', 'Open'), ('investigating', 'Under Investigation'), ('awaiting_response', 'Awaiting Response'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('resolution', models.CharField(blank=True, choices=[('refund_buyer', 'Refund to Buyer'), ('release_seller', 'Release to Seller'), ('partial_refund', 'Partial Refund'), ('replacement', 'Product Replacement'), ('no_action', 'No Action Required')], max_length=20)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolution_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('response_deadline', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_disputes', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='orders.order')),
                ('raised_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raised_disputes', to=settings.AUTH_USER_MODEL)),
                ('respondent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispute_responses', to=settings.AUTH_USER_MODEL)),
                ('escrow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='payments.escrowaccount')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='payments.transaction')),
            ],
            options={
                'db_table': 'dispute_cases',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EscrowMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone_type', models.CharField(choices=[('order_confirmed', 'Order Confirmed'), ('goods_prepared', 'Goods Prepared'), ('goods_shipped', 'Goods Shipped'), ('goods_delivered', 'Goods Delivered'), ('quality_confirmed', 'Quality Confirmed'), ('completion', 'Transaction Completed')], max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('release_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('release_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('is_completed', models.BooleanField(default=False)),
                ('is_released', models.BooleanField(default=False)),
                ('evidence_data', models.JSONField(blank=True, default=dict)),
                ('verification_notes', models.TextField(blank=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('released_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('escrow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='payments.escrowaccount')),
            ],
            options={
                'db_table': 'escrow_milestones',
                'ordering': ['release_percentage'],
                'unique_together': {('escrow', 'milestone_type')},
            },
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['gateway_reference'], name='transaction_gateway_d6e2c6_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['external_reference'], name='transaction_externa_9dc24e_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status', 'created_at'], name='transaction_status_94cf9d_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['gateway', 'event_type'], name='payment_web_gateway_debea1_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['is_processed', 'received_at'], name='payment_web_is_proc_c020d9_idx'),
        ),
    ]
