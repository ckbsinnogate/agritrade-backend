# Generated by Django 5.1.6 on 2025-07-05 05:30

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('agent_type', models.CharField(choices=[('sales_representative', 'Sales Representative'), ('field_officer', 'Field Officer'), ('extension_agent', 'Agricultural Extension Agent'), ('technical_advisor', 'Technical Advisor')], default='sales_representative', max_length=50)),
                ('assigned_regions', models.JSONField(blank=True, default=list)),
                ('target_farmers', models.PositiveIntegerField(default=100)),
                ('farmers_registered', models.PositiveIntegerField(default=0)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('performance_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('hire_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agent Profile',
                'verbose_name_plural': 'Agent Profiles',
            },
        ),
        migrations.CreateModel(
            name='ConsumerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_address', models.CharField(blank=True, max_length=200, null=True)),
                ('budget_range', models.CharField(blank=True, choices=[('low', 'Budget-friendly'), ('medium', 'Mid-range'), ('high', 'Premium'), ('luxury', 'Luxury')], max_length=20)),
                ('dietary_restrictions', models.JSONField(blank=True, default=list)),
                ('preferred_categories', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consumer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consumer Profile',
                'verbose_name_plural': 'Consumer Profiles',
            },
        ),
        migrations.CreateModel(
            name='ExtendedUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], max_length=20)),
                ('address_line_1', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('newsletter_subscription', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extended_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Extended User Profile',
                'verbose_name_plural': 'Extended User Profiles',
            },
        ),
        migrations.CreateModel(
            name='FarmerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_size', models.FloatField(default=1.0, help_text='Farm size in hectares', validators=[django.core.validators.MinValueValidator(Decimal('0.1'))])),
                ('organic_certified', models.BooleanField(default=False)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('production_capacity', models.FloatField(default=100.0, help_text='Annual production in kg')),
                ('farm_name', models.CharField(blank=True, max_length=200)),
                ('farm_type', models.CharField(blank=True, choices=[('crop', 'Crop Farming'), ('livestock', 'Livestock'), ('mixed', 'Mixed Farming'), ('organic', 'Organic Farming')], max_length=50)),
                ('primary_crops', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Farmer Profile',
                'verbose_name_plural': 'Farmer Profiles',
            },
        ),
        migrations.CreateModel(
            name='FinancialPartnerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(max_length=200)),
                ('institution_type', models.CharField(choices=[('commercial_bank', 'Commercial Bank'), ('mobile_money', 'Mobile Money Operator'), ('microfinance', 'Microfinance Institution'), ('fintech', 'FinTech Company')], max_length=50)),
                ('registration_number', models.CharField(blank=True, max_length=100)),
                ('services_offered', models.JSONField(blank=True, default=list)),
                ('supported_currencies', models.JSONField(blank=True, default=list)),
                ('minimum_transaction', models.DecimalField(decimal_places=2, default=1.0, max_digits=15)),
                ('maximum_transaction', models.DecimalField(decimal_places=2, default=1000000.0, max_digits=15)),
                ('transaction_fee_percentage', models.DecimalField(decimal_places=2, default=2.0, max_digits=5)),
                ('integration_status', models.CharField(choices=[('pending', 'Pending'), ('testing', 'Testing'), ('active', 'Active'), ('suspended', 'Suspended')], default='pending', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('partnership_start_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='financial_partner_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Financial Partner Profile',
                'verbose_name_plural': 'Financial Partner Profiles',
            },
        ),
        migrations.CreateModel(
            name='GovernmentOfficialProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('official_title', models.CharField(max_length=200)),
                ('department', models.CharField(max_length=200)),
                ('ministry', models.CharField(default='Ministry of Food and Agriculture', max_length=200)),
                ('position_level', models.CharField(choices=[('minister', 'Minister'), ('director', 'Director'), ('senior_officer', 'Senior Officer'), ('officer', 'Officer'), ('inspector', 'Inspector')], max_length=50)),
                ('jurisdiction_level', models.CharField(choices=[('national', 'National'), ('regional', 'Regional'), ('district', 'District'), ('local', 'Local')], default='district', max_length=30)),
                ('assigned_regions', models.JSONField(blank=True, default=list)),
                ('can_approve_certifications', models.BooleanField(default=False)),
                ('can_issue_permits', models.BooleanField(default=False)),
                ('can_conduct_inspections', models.BooleanField(default=False)),
                ('employment_status', models.CharField(choices=[('active', 'Active'), ('temporary', 'Temporary Assignment'), ('transferred', 'Transferred'), ('retired', 'Retired')], default='active', max_length=20)),
                ('appointment_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='government_official_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Government Official Profile',
                'verbose_name_plural': 'Government Official Profiles',
            },
        ),
        migrations.CreateModel(
            name='InstitutionProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=100)),
                ('organization_type', models.CharField(choices=[('restaurant', 'Restaurant'), ('hotel', 'Hotel'), ('school', 'School'), ('hospital', 'Hospital'), ('retailer', 'Retailer'), ('distributor', 'Distributor'), ('processor', 'Food Processor'), ('other', 'Other')], max_length=50)),
                ('tax_id', models.CharField(blank=True, max_length=50, null=True)),
                ('business_license', models.CharField(blank=True, max_length=100)),
                ('annual_volume', models.PositiveIntegerField(blank=True, help_text='Annual purchase volume in kg', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='institution_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Institution Profile',
                'verbose_name_plural': 'Institution Profiles',
            },
        ),
    ]
